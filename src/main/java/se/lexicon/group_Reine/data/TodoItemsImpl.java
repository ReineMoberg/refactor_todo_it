package se.lexicon.group_Reine.data;


import se.lexicon.group_Reine.data.database.MySqlConnection;
import se.lexicon.group_Reine.model.Person;
import se.lexicon.group_Reine.model.Todo;

import java.sql.*;
import java.util.Collection;

public class TodoItemsImpl implements TodoItems {


    /*Add a todo_item to database. ID gets generated by database and added to object
     * */
    @Override
    public Todo create(Todo todo) {
        String query = "insert into todo_item (title, description, deadline, done, assignee_id) " +
                "values (?,?,?,?,?)";
        int retrievedId;
        try (
                PreparedStatement preparedStatement =
                        MySqlConnection.getConnection().prepareStatement(query, Statement.RETURN_GENERATED_KEYS)
        ) {
            preparedStatement.setString(1, todo.getTitle());
            preparedStatement.setString(2, todo.getDescription());
            preparedStatement.setDate(3, todo.getDeadlineToMySqlFormat());
            preparedStatement.setBoolean(4, todo.isDone());
            preparedStatement.setInt(5, todo.getAssigneeId());
            int rowsAffected = preparedStatement.executeUpdate();
            if (rowsAffected == 1) {
                ResultSet resultSet = preparedStatement.getGeneratedKeys();
                if (resultSet.next()) {
                    retrievedId = resultSet.getInt(1);
                    todo.setTodoId(retrievedId);
                }
            } else {
                System.out.println("No todo ID retrieved from database");
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        return todo;
    }

    @Override
    public Collection<Todo> findAll() {
        return null;
    }

    @Override
    public Todo findById(int id) {
        return null;
    }

    @Override
    public Collection<Todo> findByDoneStatus(boolean done) {
        return null;
    }

    @Override
    public Collection<Todo> findByAssignee(int assigneeId) {
        return null;
    }

    @Override
    public Collection<Todo> findByAssignee(Person assignee) {
        return null;
    }

    @Override
    public Collection<Todo> findByUnassignedTodoItems() {
        return null;
    }

    @Override
    public Todo updateTodo(Todo todo) {
        return null;
    }

    @Override
    public boolean deleteById(int id) {
        return false;
    }
}
